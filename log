Option 3: Using Built-in Logging with log4net (since you're using log4net)
If you already have log4net configured, follow these steps:

Install the Log4Net Package:

bash
Copy code
dotnet add package Microsoft.Extensions.Logging.Log4Net.AspNetCore
Configure Log4Net in Program.cs: Modify Program.cs to load the log4net configuration file:

csharp
Copy code
using Microsoft.Extensions.Logging;

public class Program
{
    public static void Main(string[] args)
    {
        CreateHostBuilder(args).Build().Run();
    }

    public static IHostBuilder CreateHostBuilder(string[] args) =>
        Host.CreateDefaultBuilder(args)
            .ConfigureLogging(logging =>
            {
                logging.ClearProviders();
                logging.AddLog4Net("log4net.config");
            })
            .ConfigureWebHostDefaults(webBuilder =>
            {
                webBuilder.UseStartup<Startup>();
            });
}
Add log4net.config File: Create log4net.config in your project root with file append configuration:

xml
Copy code
<log4net>
  <appender name="FileAppender" type="log4net.Appender.RollingFileAppender">
    <file value="Logs/logfile.log" />
    <appendToFile value="true" />
    <rollingStyle value="Date" />
    <datePattern value="yyyyMMdd'.log'" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %-5level %logger - %message%newline" />
    </layout>
  </appender>

  <root>
    <level value="INFO" />
    <appender-ref ref="FileAppender" />
  </root>
</log4net>
Run the Application:

Logs will be saved under Logs/logfile-yyyyMMdd.log.
